import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Geocoding',
      home: GeocodingPage(),
    );
  }
}

class GeocodingPage extends StatefulWidget {
  @override
  _GeocodingPageState createState() => _GeocodingPageState();
}

class _GeocodingPageState extends State<GeocodingPage> {
  final _latitudeController = TextEditingController();
  final _longitudeController = TextEditingController();
  Future<String> _addressFuture;

  Future<String> _getAddress() async {
    final url = Uri.parse(
        'https://api.opencagedata.com/geocode/v1/json?q=${_latitudeController.text},${_longitudeController.text}&key=YOUR_API_KEY');
    final response = await http.get(url);

    if (response.statusCode == 200) {
      final data = jsonDecode(response.body);
      return data['results'][0]['formatted'];
    } else {
      return 'Error: Unable to get address';
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Flutter Geocoding'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: _latitudeController,
              decoration: InputDecoration(labelText: 'Latitude'),
            ),
            SizedBox(height: 16.0),
            TextField(
              controller: _longitudeController,
              decoration: InputDecoration(labelText: 'Longitude'),
            ),
            SizedBox(height: 16.0),
            ElevatedButton(
              onPressed: () {
                if (_latitudeController.text.isNotEmpty && _longitudeController.text.isNotEmpty) {
                  setState(() {
                    _addressFuture = _getAddress();
                  });
                } else {
                  ScaffoldMessenger.of(context).showSnackBar(
                    SnackBar(content: Text('Please enter both latitude and longitude')),
                  );
                }
              },
              child: Text('Get Address'),
            ),
            SizedBox(height: 16.0),
            FutureBuilder<String>(
              future: _addressFuture,
              builder: (context, snapshot) {
                if (snapshot.hasData) {
                  return Text('Address: ${snapshot.data}');
                } else {
                  return Text('Enter latitude and longitude to get address');
                }
              },
            ),
          ],
        ),
      ),
    );
  }

  @override
  void dispose() {
    _latitudeController.dispose();
    _longitudeController.dispose();
    super.dispose();
  }
}
